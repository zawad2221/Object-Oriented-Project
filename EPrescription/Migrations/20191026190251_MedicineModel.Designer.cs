// <auto-generated />
using EPrescription.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EPrescription.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191026190251_MedicineModel")]
    partial class MedicineModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EPrescription.Models.Company", b =>
                {
                    b.Property<string>("companyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("companyAddress")
                        .IsRequired();

                    b.Property<string>("companyEmail")
                        .IsRequired();

                    b.Property<string>("companyLicence")
                        .IsRequired();

                    b.Property<string>("companyName")
                        .IsRequired();

                    b.Property<string>("companyPassword")
                        .IsRequired();

                    b.HasKey("companyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("EPrescription.Models.Doctor", b =>
                {
                    b.Property<string>("doctorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("doctorDesignation")
                        .IsRequired();

                    b.Property<string>("doctorName")
                        .IsRequired();

                    b.Property<string>("doctorPassword")
                        .IsRequired();

                    b.Property<string>("doctorPhoneNumber")
                        .IsRequired();

                    b.Property<string>("doctorSpecializedArea")
                        .IsRequired();

                    b.HasKey("doctorId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("EPrescription.Models.Medicine", b =>
                {
                    b.Property<string>("medicineId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("companyId")
                        .IsRequired();

                    b.Property<string>("medicineFormId")
                        .IsRequired();

                    b.Property<string>("medicineName")
                        .IsRequired();

                    b.Property<string>("medicineSingleUniteQuantity");

                    b.Property<string>("medicineTypeId")
                        .IsRequired();

                    b.HasKey("medicineId");

                    b.HasIndex("companyId");

                    b.HasIndex("medicineFormId");

                    b.HasIndex("medicineTypeId");

                    b.ToTable("Medicine");
                });

            modelBuilder.Entity("EPrescription.Models.MedicineForm", b =>
                {
                    b.Property<string>("medicineFormId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("medicineFormName")
                        .IsRequired();

                    b.HasKey("medicineFormId");

                    b.ToTable("MedicineForm");
                });

            modelBuilder.Entity("EPrescription.Models.MedicineType", b =>
                {
                    b.Property<string>("medicineTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("medicineTypeName")
                        .IsRequired();

                    b.HasKey("medicineTypeId");

                    b.ToTable("MedicineType");
                });

            modelBuilder.Entity("EPrescription.Models.Pharmacist", b =>
                {
                    b.Property<string>("pharmacistId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("drugeLicence")
                        .IsRequired();

                    b.Property<string>("pharmacistPassword")
                        .IsRequired();

                    b.Property<string>("pharmacistPhoneNumber")
                        .IsRequired();

                    b.Property<string>("storeAddress")
                        .IsRequired();

                    b.Property<string>("storeName")
                        .IsRequired();

                    b.HasKey("pharmacistId");

                    b.ToTable("Pharmacists");
                });

            modelBuilder.Entity("EPrescription.Models.Medicine", b =>
                {
                    b.HasOne("EPrescription.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EPrescription.Models.MedicineForm", "MedicineForm")
                        .WithMany()
                        .HasForeignKey("medicineFormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EPrescription.Models.MedicineType", "MedicineType")
                        .WithMany()
                        .HasForeignKey("medicineTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
